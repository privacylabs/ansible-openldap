---
  - name: Configure database backend for OpenLDAP in debconf
    debconf:
      name: 'slapd'
      question: 'slapd/backend'
      vtype: 'string'
      value: 'HDB'
    become: yes
    tags:
      - packages

  - name: Configure option to move old database for OpenLDAP in debconf
    debconf:
      name: 'slapd'
      question: 'slapd/move_old_database'
      vtype: 'boolean'
      value: 'true'
    become: yes
    tags:
      - packages

  - name: Configure destination to dump old database for OpenLDAP in debconf
    debconf:
      name: 'slapd'
      question: 'slapd/dump_database_destdir'
      vtype: 'string'
      value: '/var/backups/slapd-VERSION'
    become: yes
    tags:
      - packages

  - name: Configure option to disable LDAPv2 for OpenLDAP in debconf
    debconf:
      name: 'slapd'
      question: 'slapd/allow_ldap_v2'
      vtype: 'boolean'
      value: 'false'
    become: yes
    tags:
      - packages

  - name: Configure option to purge database for OpenLDAP in debconf
    debconf:
      name: 'slapd'
      question: 'slapd/purge_database'
      vtype: 'boolean'
      value: 'false'
    become: yes
    tags:
      - packages

  - name: Configure admin password for OpenLDAP in debconf
    debconf:
      name: 'slapd'
      question: 'slapd/password1'
      vtype: 'string'
      value: "{{ ldapadminpassword }}"
    become: yes
    tags:
      - packages

  - name: Configure admin password for OpenLDAP in debconf
    debconf:
      name: 'slapd'
      question: 'slapd/password2'
      vtype: 'string'
      value: "{{ ldapadminpassword }}"
    become: yes
    tags:
      - packages

  - name: Configure default domain for OpenLDAP in debconf
    debconf:
      name: 'slapd'
      question: 'slapd/domain'
      vtype: 'string'
      value: '{{domain}}'
    become: yes
    tags:
      - packages

  - name: Install OpenLDAP packages
    apt:
      name: '{{ item }}'
      install_recommends: False
    with_items: [ 'slapd', 'ldap-utils' ]
    become: yes
    tags:
      - packages

  - name: copy over slapd default file for config options
    copy:
      src: slapd
      dest: /etc/default/slapd
      mode: 0755
    become: yes
    tags:
      - packages

  - name: restart slapd to pick up change to only listen on localhost
    service:
      name: slapd
      enabled: yes
      state: restarted
    become: yes
    tags:
      - packages

  - name: Install packages for python-ldap pip module
    apt:
      name: '{{ item }}'
    become: yes
    with_items: [ 'libsasl2-dev', 'python-dev', 'libldap2-dev', 'libssl-dev', 'python-pip' ]
    tags:
      - packages

  - name: Install python-ldap pip module
    pip:
      name: python-ldap
    become: yes
    tags:
      - packages

  - name: check to see if we have loaded password module for openldap
    command: ldapsearch -H ldapi:// -Y EXTERNAL -b "cn=module{0},cn=config" -LLL -Q olcModuleLoad={1}pw-sha2
    register: pw_sha2
    become: yes
    tags:
      - packages

  - name: copy ldif for pw module if needed
    copy:
      src: pw.ldif
      dest: /tmp/pw.ldif
    become: yes
    when: pw_sha2.stdout == ""
    tags:
      - packages

  - name: load password module for openldap if we haven't yet
    command: ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /tmp/pw.ldif #ldapmodify -Y EXTERNAL -H ldapi:/// -f pw.ldif
    become: yes
    when: pw_sha2.stdout == ""
    tags:
      - packages

  - name: set default password hash scheme
    ldap_attr:
      dn: olcDatabase={-1}frontend,cn=config
      name: olcPasswordHash
      values: '{SHA256}'
      state: exact
    become: yes
    tags:
      - packages

  - name: calculate admin password hash
    shell: "echo -n {{ ldapadminpassword }} | openssl dgst -sha256 -binary | openssl enc -base64"
    register: admin_hash
    tags:
      - packages
      - configuration

  - name: set rootDN password again to store it with new password hash scheme
    ldap_attr:
      dn: 'olcDatabase={1}hdb,cn=config'
      name: "{{ item.key }}"
      values: "{{ item.value }}"
      state: exact
    become: yes
    with_dict:
      olcRootDN: "{{ defaultadmindn }}"
      olcRootPW: "{SHA256}{{ admin_hash.stdout }}"
    tags:
      - packages
      - configuration

  - name: set admin password again to store it with new password hash scheme
    ldap_attr:
      dn: "{{ defaultadmindn }}"
      name: "{{ item.key }}"
      values: "{{ item.value }}"
      state: exact
      bind_dn: "{{ defaultadmindn }}"
      bind_pw: "{{ ldapadminpassword }}"
    become: yes
    with_dict:
      userPassword: "{SHA256}{{ admin_hash.stdout }}"
    tags:
      - packages
      - configuration

  - name: Stat misc.ldif to see if we've already imported schema
    stat: path=/etc/ldap/slapd.d/cn=config/cn=schema/cn={4}misc.ldif
    register: st
    become: yes
    tags:
      - packages

  - name: Add misc.ldif if we haven't before
    shell: ldapadd -c -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/misc.ldif
    become: yes
    when: not st.stat.exists
    tags:
      - packages

  - name: Set slapd log level
    ldap_attr:
      dn: 'cn=config'
      name: '{{ item.key }}'
      values: '{{ item.value }}'
      state: 'exact'
    with_dict:
      olcLogLevel: 'stats none'
    become: yes
    tags:
      - packages

  - name: Purge debconf config database for slapd
    command: echo PURGE | debconf-communicate slapd
    tags:
      - packages
